---

import type { HTMLAttributes } from 'astro/types';

// Define las props para el componente
interface Props extends HTMLAttributes<'div'> {
  icon?: string; // Ruta al SVG del icono, o un emoji, etc.
  label: string; // Texto del label, ej. "Servicios", "Nosotros"
  alignment?: 'left' | 'center'; // Alineación del texto y el icono
}

const { icon, label, alignment = 'center', class: className, ...attrs } = Astro.props;

// Clases de alineación
const alignClasses = {
  left: 'justify-start text-left',
  center: 'justify-center text-center',
};
---

<div class={`flex items-center gap-2 mb-2 ${alignClasses[alignment]} ${className}`} {...attrs}>
  {icon && (
    <div class="w-6 h-6 flex items-center justify-center rounded-full bg-[var(--color-jj-accent)] text-[var(--color-jj-dark)]">
      {/* Si 'icon' es un SVG, se puede inyectar directamente aquí, o usar un componente SVG */}
      <Fragment set:html={icon} /> {/* Esto asume que 'icon' es el código SVG como string */}
    </div>
  )}
  <p class="text-[var(--color-jj-accent)] font-semibold text-lg">{label}</p>
</div>